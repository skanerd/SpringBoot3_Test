plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.mysite'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	// developmentOnly 는 개발환경에만 적용된다. 
	// 서버 재시작 없이 변경사항을 적용시켜준다.
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	
	// compileOnly 는 컴파일 단계에서만 적용된다. 
	compileOnly 'org.projectlombok:lombok'
	
	// 컴파일 단계에서 어노테이션을 분석하고 처리할 때 사용한다.
	annotationProcessor 'org.projectlombok:lombok'
	
	// 해당 라이브러리를 런타임 시에만 사용됨을 의미
	runtimeOnly 'com.h2database:h2'
	
	// implementation 해당 라이브러리가 변경되더라도 이 라이브러리와 연관된 모든 모듈을 컴파일 하지 않고
	// 변경된 내용과 관련이 있는 모듈만 컴파일한다. (프로젝트 리빌드하는 속도가 빠르다.)
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	
	// Junit 사용을 위해
	testImplementation 'org.junit.jupiter:junit-jupiter'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	
	// thymeleaf 템플릿 사용을 위해
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
	
	// 폼 클래스를 사용해 사용자로부터 입력받은 값을 검증하기 위해서
	// 공백 등의 입력값을 방지하기 위해
	// @어노테이션을 통해서 입력한 값을 검증할 수 있다.
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	
	// (보안) 스프링 시큐리티
	implementation 'org.springframework.boot:spring-boot-starter-security'
	
	// 스프링 시큐리티를 사용하기 위한 타임리프	
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'

	// 마크다운 라이브러리
	// 다른 인터페이스의 상속(implementation)과 다르게 버전까지 작성하는 이유
	// commonmark는 스프링 부트 내부 라이브러리에 포함되어 있지 않은 라이브러리이기에 버전이 필요하다.
	implementation 'org.commonmark:commonmark:0.21.0'

tasks.named('test') {
	useJUnitPlatform()
}
